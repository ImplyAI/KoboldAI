#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o noclobber
set -o pipefail

# NOTE: Running the container directly and not through Docker Compose, because Docker Compose only supports `--gpus all`
#       when running in Swarm mode.

llm_model_uid="${1}"
published_port="${2:-5000}"
shift

working_dir_path="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"

# TODO: extract from the build and run scripts
koboldai_image_name='implyai/koboldai'
#koboldai_image_tag="$(git rev-parse HEAD)"

koboldai_data_local_dir_name='koboldai-data'
echo "[INFO] Creating the ${koboldai_data_local_dir_name} directory, if it doesn't  exist already..."
mkdir -p "${working_dir_path}/${koboldai_data_local_dir_name}"

koboldai_models_local_dir_name='koboldai-models'
echo "[INFO] Creating the ${koboldai_models_local_dir_name} directory, if it doesn't  exist already..."
mkdir -p "${working_dir_path}/${koboldai_models_local_dir_name}"

koboldai_container_name='koboldai'
echo "[INFO] Starting ${koboldai_container_name} Docker container in detached mode..."
export KOBOLDAI_DATADIR='/content'
export KOBOLDAI_MODELDIR='/models'
docker run \
  --detach \
  --name "${koboldai_container_name}" \
  --gpus all \
  --env KOBOLDAI_DATADIR \
  --env KOBOLDAI_MODELDIR \
  --env LLM_MODEL_UID="${llm_model_uid}" \
  --volume "${working_dir_path}/${koboldai_data_local_dir_name}:${KOBOLDAI_DATADIR}" \
  --volume "${working_dir_path}/${koboldai_models_local_dir_name}:${KOBOLDAI_MODELDIR}" \
  --publish "${published_port}:5000" \
  "${koboldai_image_name}:latest" \
  "$@"
echo "[INFO] Launched ${koboldai_container_name} Docker container in detached mode."
